server.port=8381
#mysql
spring.datasource.url=jdbc:mysql://10.28.10.116:3306/dili-assets?createDatabaseIfNotExist=true&autoReconnect=true&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=CTT
spring.datasource.username=root
spring.datasource.password=123456

#spring cloud
spring.cloud.nacos.discovery.server-addr=10.28.12.131:8848
spring.cloud.nacos.discovery.group=MICROSERVICE
spring.cloud.nacos.discovery.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc
management.endpoints.web.exposure.include=*
spring.cloud.sentinel.eager=true

#ribbon 配置
#ribbon.okhttp.enabled=true
#ribbon.okhttp.enabled=true
#Max number of retries**
#ribbon.MaxAutoRetries=5
#Max number of next servers to retry (excluding the first server)
#切换实例的重试次数，默认为1
#ribbon.MaxAutoRetriesNextServer=1
#ribbon.ConnectTimeout=3000
#Read timeout used by Apache HttpClient
#ribbon.ReadTimeout=3000
#Whether all operations can be retried for this client
#对所有操作请求都进行重试
#设置为true时，会对所有的请求进行重试，若为false只会对get请求进行重试
#如果是put或post等写操作，
#如果服务器接口没做幂等性，会产生不好的结果，所以OkToRetryOnAllOperations慎用。
#默认情况下,GET方式请求无论是连接异常还是读取异常,都会进行重试
#非GET方式请求,只有连接异常时,才会进行重试
#ribbon.OkToRetryOnAllOperations=false
#Interval to refresh the server list from the source
#ribbon.ServerListRefreshInterval=2000

#assets-service.ribbon.MaxAutoRetries=5
#assets-service.ribbon.ReadTimeout=3000
#assets-service.ribbon.ConnectTimeout=3000
#assets-service.ribbon.MaxAutoRetriesNextServer=0
#assets-service.OkToRetryOnAllOperations=true

ribbon.eager-load.enabled=true
ribbon.eager-load.clients[0]=assets-service
ribbon.eager-load.clients[1]=settlement-service
#Connect timeout used by Apache HttpClient

#Initial list of servers, can be changed via Archaius dynamic property at runtime
#ribbon.listOfServers=testserver1:80,testserver2 :80,testserver3:80
#ribbon.EnablePrimeConnections=true

#feign 配置
feign.okhttp.enabled=true
feign.client.config.default.connectTimeout=1000
feign.client.config.default.readTimeout=10000
#feign.httpclient.connection-timeout=2000
#feign.httpclient.enabled=true
#feign.httpclient.max-connections=200
#feign.httpclient.connection-timer-repeat=3000

#Seata
seata.enabled=true
seata.application-id=intelligent-assets
seata.config.type=nacos
seata.registry.type=nacos
# seata \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u98EC\u04AA\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFDnacos-config.txt\uFFFD\uFFFDservice.vgroup_mapping\uFFFD\u013A\uFFFD\u05FA\uFFFD\uFFFD\u04E6
spring.cloud.alibaba.seata.tx-service-group=business-service-seata-service-group
seata.service.vgroup_mapping.business-service-seata-service-group=default
#spring.cloud.alibaba.seata.tx-service-group=my_test_tx_group
#seata.service.grouplist=127.0.0.1:8091
seata.registry.nacos.cluster=default
#seata.registry.nacos.server-addr=127.0.0.1:8848
#seata.registry.nacos.namespace=31098757-4ed1-4b43-8202-4534aa800f93
seata.registry.nacos.server-addr=10.28.12.131:8848
seata.registry.nacos.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc

#seata.config.nacos.namespace=31098757-4ed1-4b43-8202-4534aa800f93
#seata.config.nacos.server-addr=127.0.0.1:8848
seata.config.nacos.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc
seata.config.nacos.server-addr=10.28.12.131:8848
logging.level.io.seata = debug

logger.enable=true
#MQ\uFFFD\uFFFD\uFFFD\u00E3\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u03E2\uFFFD\uFFFD\uFFFD\u0532\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
spring.rabbitmq.host=10.28.12.214
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=123456
spring.rabbitmq.virtual-host=/
# \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0237\uFFFD\uFFFD
spring.rabbitmq.publisher-confirm-type=correlated
# \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u02A7\uFFFD\uFFFD\uFFFD\u02FB\uFFFD
spring.rabbitmq.publisher-returns=true

settlement.app-id = 101
upload.path=/home/dili/temp-rainy/
## \u7ED3\u7B97\u56DE\u8C03\u8DEF\u5F84
settlement.handler.url = http://ia.diligrp.com:8381/api/leaseOrder/settlementDealHandler
earnestOrder.settlement.handler.url = http://ia.diligrp.com:8381/api/earnestOrder/settlementDealHandler
refundOrder.settlement.handler.url = http://ia.diligrp.com:8381/api/refundOrder/settlementDealHandler