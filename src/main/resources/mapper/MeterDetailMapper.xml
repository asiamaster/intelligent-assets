<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.ia.mapper.MeterDetailMapper">
  <resultMap id="BaseResultMap" type="com.dili.ia.domain.MeterDetail">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="meter_id" jdbcType="BIGINT" property="meterId" />
    <result column="usage_time" jdbcType="TIMESTAMP" property="usageTime" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_cellphone" jdbcType="VARCHAR" property="customerCellphone" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="record_time" jdbcType="BIGINT" property="recordTime" />
    <result column="recorder_name" jdbcType="TIMESTAMP" property="recorderName" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="last_amount" jdbcType="BIGINT" property="lastAmount" />
    <result column="this_amount" jdbcType="BIGINT" property="thisAmount" />
    <result column="usage_amount" jdbcType="BIGINT" property="usageAmount" />
    <result column="receivable" jdbcType="BIGINT" property="receivable" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="creator_dep_id" jdbcType="BIGINT" property="creatorDepId" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="submitter_id" jdbcType="BIGINT" property="submitterId" />
    <result column="submitter" jdbcType="VARCHAR" property="submitter" />
    <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime" />
    <result column="withdraw_operator_id" jdbcType="BIGINT" property="withdrawOperatorId" />
    <result column="withdraw_operator" jdbcType="VARCHAR" property="withdrawOperator" />
    <result column="canceler_id" jdbcType="BIGINT" property="cancelerId" />
    <result column="canceler" jdbcType="VARCHAR" property="canceler" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="market_id" jdbcType="BIGINT" property="marketId" />
    <result column="market_code" jdbcType="VARCHAR" property="marketCode" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, create_time, modify_time, code, meter_id, usage_time, customer_id, customer_name, customer_cellphone, department_id, department_name,
    record_time, recorder_name, state, last_amount, this_amount, usage_amount, receivable, amount, creator_dep_id,
    notes, submitter_id, submitter, submit_time, withdraw_operator_id, withdraw_operator, 
    canceler_id, canceler, creator_id, creator, market_id, market_code, version
  </sql>
  <select id="selectBy" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from meter_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="updateBy" parameterType="com.dili.ia.domain.MeterDetail">
    <!--
      WARNING - @mbg.generated
    -->
    update meter_detail
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="meterId != null">
        meter_id = #{meterId,jdbcType=BIGINT},
      </if>
      <if test="usageTime != null">
        usage_time = #{usageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="recordTime != null">
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recorderName != null">
        recorder_name = #{recorderName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="lastAmount != null">
        last_amount = #{lastAmount,jdbcType=BIGINT},
      </if>
      <if test="thisAmount != null">
        this_amount = #{thisAmount,jdbcType=BIGINT},
      </if>
      <if test="usageAmount != null">
        usage_amount = #{usageAmount,jdbcType=BIGINT},
      </if>
      <if test="creatorDepId != null">
        creator_dep_id = #{creatorDepId,jdbcType=BIGINT},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="submitterId != null">
        submitter_id = #{submitterId,jdbcType=BIGINT},
      </if>
      <if test="submitter != null">
        submitter = #{submitter,jdbcType=VARCHAR},
      </if>
      <if test="submitTime != null">
        submit_time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawOperatorId != null">
        withdraw_operator_id = #{withdrawOperatorId,jdbcType=BIGINT},
      </if>
      <if test="withdrawOperator != null">
        withdraw_operator = #{withdrawOperator,jdbcType=VARCHAR},
      </if>
      <if test="cancelerId != null">
        canceler_id = #{cancelerId,jdbcType=BIGINT},
      </if>
      <if test="canceler != null">
        canceler = #{canceler,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null">
        market_id = #{marketId,jdbcType=BIGINT},
      </if>
      <if test="marketCode != null">
        market_code = #{marketCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listMeterDetails" parameterType="com.dili.ia.domain.dto.MeterDetailDto" resultType="com.dili.ia.domain.dto.MeterDetailDto">
    SELECT DISTINCT
        md.id,
        md.create_time,
        md.modify_time,
        md.code,
        md.meter_id,
        md.usage_time,
        md.customer_id,
        md.customer_name,
        md.customer_cellphone,
        md.department_id,
        md.department_name,
        md.record_time,
        md.recorder_name,
        md.state,
        md.last_amount,
        md.this_amount,
        md.usage_amount,
        md.receivable,
        md.amount,
        md.amount - md.receivable as sharedAmount,
        md.creator_dep_id,
        md.notes,
        md.submitter_id,
        md.submitter,
        md.submit_time,
        md.withdraw_operator_id,
        md.withdraw_operator,
        md.canceler_id,
        md.canceler,
        md.creator_id,
        md.creator,
        md.market_id,
        md.market_code,
        md.version,
        m.number as number,
        m.type as type,
        m.assets_name as assetsName,
        m.assets_type as assetsType,
        m.price as price
    FROM
        meter_detail md
    LEFT JOIN meter m on md.meter_id = m.id
   <where>
       <if test="type != null">
           and m.type = #{type,jdbcType=INTEGER}
       </if>
      <if test="state != null">
          and md.state = #{state,jdbcType=INTEGER}
      </if>
      <if test="assetsType != null">
          and m.assets_type = #{assetsType,jdbcType=INTEGER}
      </if>
      <if test="departmentId != null">
          and md.department_id = #{departmentId,jdbcType=INTEGER}
      </if>
     <if test="startTime != null">
          and md.usage_time  <![CDATA[ >= ]]> #{startTime}
     </if>
     <if test="endTime != null">
          and md.usage_time  <![CDATA[ <= ]]> #{endTime}
     </if>
     <if test="keyword != null and keyword != ''">
          and (
          m.number like concat('', #{keyword}, '%')
          or md.code like concat('', #{keyword}, '%')
          or md.customer_name like concat('', #{keyword}, '%')
          )
      </if>
   </where>
  </select>

  <select id="countUnPayByMeterAndCustomer" parameterType="com.dili.ia.domain.dto.MeterDetailDto" resultType="long">
    SELECT
    DISTINCT
        md.id
    FROM
        meter_detail md
        LEFT JOIN payment_order po ON md.id = po.business_id
    WHERE
        md.meter_id = #{meterId}
        AND po.biz_type = #{bizType}
    <if test = "customerId != null" >
        AND md.customer_id = #{customerId}
    </if>
    <if test = "state != null" >
        AND po.state = #{state}
    </if>
  </select>

    <select id="getLastAmountByMeterId" parameterType="com.dili.ia.domain.dto.MeterDetailDto" resultType="long">
    SELECT
        md.last_amount
    FROM
        meter_detail md
        LEFT JOIN payment_order po ON md.id = po.business_id
    WHERE
        md.meter_id = #{meterId}
    and po.biz_type = #{bizType}
    and md.submit_time is not null
    <if test="state != null and state !=''">
        AND po.state = #{state}
    </if>
    order by
        md.last_amount desc
    LIMIT 1
    </select>

  <select id="getMeterDetailDtoById" resultType="com.dili.ia.domain.dto.MeterDetailDto" parameterType="long">
    SELECT DISTINCT
        md.id,
        md.create_time,
        md.modify_time,
        md.code,
        md.meter_id,
        md.usage_time,
        md.customer_id,
        md.customer_name,
        md.customer_cellphone,
        md.department_id,
        md.department_name,
        md.record_time,
        md.recorder_name,
        md.state,
        md.last_amount,
        md.this_amount,
        md.usage_amount,
        md.receivable,
        md.amount,
        md.creator_dep_id,
        md.notes,
        md.submitter_id,
        md.submitter,
        md.submit_time,
        md.withdraw_operator_id,
        md.withdraw_operator,
        md.canceler_id,
        md.canceler,
        md.creator_id,
        md.creator,
        md.market_id,
        md.market_code,
        md.version,
        m.number as number,
        m.type as type,
        m.assets_name as assetsName,
        m.assets_type as assetsType,
        m.price as price
    FROM
        meter_detail md
    LEFT JOIN meter m on md.meter_id = m.id
    WHERE
        md.id = #{id}
  </select>

    <select id="getMeterDetailByCode" resultType="com.dili.ia.domain.dto.MeterDetailDto" parameterType="long">
    SELECT DISTINCT
        md.id,
        md.create_time,
        md.modify_time,
        md.code,
        md.meter_id,
        md.usage_time,
        md.customer_id,
        md.customer_name,
        md.customer_cellphone,
        md.department_id,
        md.department_name,
        md.record_time,
        md.recorder_name,
        md.state,
        md.last_amount,
        md.this_amount,
        md.usage_amount,
        md.receivable,
        md.amount,
        md.creator_dep_id,
        md.notes,
        md.submitter_id,
        md.submitter,
        md.submit_time,
        md.withdraw_operator_id,
        md.withdraw_operator,
        md.canceler_id,
        md.canceler,
        md.creator_id,
        md.creator,
        md.market_id,
        md.market_code,
        md.version,
        m.number as number,
        m.type as type,
        m.assets_name as assetsName,
        m.assets_type as assetsType,
        m.price as price
    FROM
        meter_detail md
    LEFT JOIN meter m on md.meter_id = m.id
    WHERE
        md.id = #{id}
  </select>

    <select id="listMeterDetailByUnPayBusiness" parameterType="com.dili.ia.domain.dto.MeterDetailDto" resultType="com.dili.ia.domain.dto.MeterDetailDto">
        SELECT DISTINCT
            id
        FROM
            meter_detail
        WHERE
            meter_id = #{meterId}
        AND
            state IN (#{status})
    </select>

    <select id="listByStateCreatedAndType" parameterType="com.dili.ia.domain.dto.MeterDetailDto" resultType="com.dili.ia.domain.dto.MeterDetailDto">
        SELECT DISTINCT
            md.id
        FROM
            meter_detail as md
        left join meter as m on md.meter_id = m.id
        WHERE
            md.state = #{state}
        and
            m.type = #{type}
    </select>

    <select id="getMeterDetailDtoListByIds" resultType="com.dili.ia.domain.dto.MeterDetailDto">
    SELECT DISTINCT
        md.id,
        md.create_time,
        md.modify_time,
        md.code,
        md.meter_id,
        md.usage_time,
        md.customer_id,
        md.customer_name,
        md.customer_cellphone,
        md.department_id,
        md.department_name,
        md.record_time,
        md.recorder_name,
        md.state,
        md.last_amount,
        md.this_amount,
        md.usage_amount,
        md.receivable,
        md.amount,
        md.creator_dep_id,
        md.notes,
        md.submitter_id,
        md.submitter,
        md.submit_time,
        md.withdraw_operator_id,
        md.withdraw_operator,
        md.canceler_id,
        md.canceler,
        md.creator_id,
        md.creator,
        md.market_id,
        md.market_code,
        md.version,
        m.number as number,
        m.type as type,
        m.assets_name as assetsName,
        m.assets_type as assetsType,
        m.price as price
    FROM
        meter_detail md
    LEFT JOIN meter m on md.meter_id = m.id
    WHERE
        md.id in
        <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
  </select>
</mapper>