<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.ia.mapper.MeterMapper">
  <resultMap id="BaseResultMap" type="com.dili.ia.domain.Meter">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="assets_type" jdbcType="VARCHAR" property="assetsType" />
    <result column="assets_id" jdbcType="BIGINT" property="assetsId" />
    <result column="assets_name" jdbcType="VARCHAR" property="assetsName" />
    <result column="init_amount" jdbcType="BIGINT" property="initAmount" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="creator_dep_id" jdbcType="BIGINT" property="creatorDepId" />
    <result column="balance" jdbcType="BIGINT" property="balance" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="market_id" jdbcType="BIGINT" property="marketId" />
    <result column="market_code" jdbcType="VARCHAR" property="marketCode" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, create_time, modify_time, number, type, department_id, department_name, assets_type, 
    assets_id, assets_name, init_amount, price, creator_dep_id, balance, notes, creator_id, 
    creator, market_id, market_code, version
  </sql>
  <select id="getMeterById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from meter
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="updateBy" parameterType="com.dili.ia.domain.Meter">
    <!--
      WARNING - @mbg.generated
    -->
    update meter
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="assetsType != null">
        assets_type = #{assetsType,jdbcType=VARCHAR},
      </if>
      <if test="assetsId != null">
        assets_id = #{assetsId,jdbcType=BIGINT},
      </if>
      <if test="assetsName != null">
        assets_name = #{assetsName,jdbcType=VARCHAR},
      </if>
      <if test="initAmount != null">
        init_amount = #{initAmount,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="creatorDepId != null">
        creator_dep_id = #{creatorDepId,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null">
        market_id = #{marketId,jdbcType=BIGINT},
      </if>
      <if test="marketCode != null">
        market_code = #{marketCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getUnbindMeterByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            m.id,
            m.assets_name,
            m.number,
            m.department_id,
            m.department_name,
            m.assets_type,
            m.assets_id
        FROM
            meter m
        WHERE
            m.id NOT IN (
        SELECT
            cm.meter_id
        FROM
            customer_meter cm
        WHERE
            cm.state = 1
            AND m.id = cm.meter_id
            AND m.type = #{value}

            )
        AND m.type = #{type}
    </select>

  <select id="getMeterLikeNumber" parameterType="com.dili.ia.domain.Meter" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List" />
    from
        meter
    where
        type = #{type,jdbcType=INTEGER}
    and
        number like CONCAT('%',#{number,jdbcType=VARCHAR},'%' )
  </select>
</mapper>