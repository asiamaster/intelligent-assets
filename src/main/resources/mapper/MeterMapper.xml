<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.ia.mapper.MeterMapper">
  <resultMap id="BaseResultMap" type="com.dili.ia.domain.Meter">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="type" jdbcType="INTEGER" property="type" />
      <result column="assets_type" jdbcType="TINYINT" property="assetsType" />
    <result column="assets_id" jdbcType="BIGINT" property="assetsId" />
    <result column="assets_name" jdbcType="VARCHAR" property="assetsName" />
    <result column="this_amount" jdbcType="BIGINT" property="thisAmount" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="creator_dep_id" jdbcType="BIGINT" property="creatorDepId" />
    <result column="balance" jdbcType="BIGINT" property="balance" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="market_id" jdbcType="BIGINT" property="marketId" />
    <result column="market_code" jdbcType="VARCHAR" property="marketCode" />
      <result column="mch_id" jdbcType="BIGINT" property="mchId" />
      <result column="mch_name" jdbcType="VARCHAR" property="mchName" />
      <result column="first_district_id" jdbcType="BIGINT" property="firstDistrictId" />
      <result column="first_district_name" jdbcType="VARCHAR" property="firstDistrictName" />
      <result column="second_district_id" jdbcType="BIGINT" property="secondDistrictId" />
      <result column="second_district_name" jdbcType="VARCHAR" property="secondDistrictName" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, create_time, modify_time, number, type, assets_type,
    assets_id, assets_name, this_amount, price, creator_dep_id, balance, notes, creator_id,
    creator, market_id, market_code, mch_id, mch_name, first_district_id, first_district_name, second_district_id, second_district_name, version
  </sql>
  <select id="getMeterById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from meter
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="updateBy" parameterType="com.dili.ia.domain.Meter">
    <!--
      WARNING - @mbg.generated
    -->
    update meter
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="assetsType != null">
        assets_type = #{assetsType,jdbcType=TINYINT},
      </if>
      <if test="assetsId != null">
        assets_id = #{assetsId,jdbcType=BIGINT},
      </if>
      <if test="assetsName != null">
        assets_name = #{assetsName,jdbcType=VARCHAR},
      </if>
      <if test="initAmount != null">
        init_amount = #{initAmount,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="creatorDepId != null">
        creator_dep_id = #{creatorDepId,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null">
        market_id = #{marketId,jdbcType=BIGINT},
      </if>
      <if test="marketCode != null">
        market_code = #{marketCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="listUnbindMetersByType" parameterType="com.dili.ia.domain.dto.MeterDto" resultMap="BaseResultMap">
        SELECT
            m.id,
            m.assets_name,
            m.number,
            m.assets_type,
            m.assets_id
        FROM
            meter m
        WHERE
            m.id NOT IN (
              SELECT
                  cm.meter_id
              FROM
                  customer_meter cm
              WHERE
                  cm.state = 1
                  AND m.id = cm.meter_id
                  AND m.type = #{type}
            )
        AND m.type = #{type}
      <if test="keyword != null">
        and m.number like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%' )
      </if>

    </select>

    <select id="listMetersLikeNumber" parameterType="com.dili.ia.domain.dto.MeterDto" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from
            meter
        where
            type = #{type,jdbcType=INTEGER}
        <if test="keyword != null">
          and number like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%' )
        </if>
    </select>

  <select id="getMeterByNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List" />
    from
        meter
    where
        number = #{number,jdbcType=VARCHAR}
  </select>

    <select id="getMeterDtoById" resultType="com.dili.ia.domain.dto.MeterDto">
        select
            m.id,
            m.create_time,
            m.modify_time,
            m.number,
            m.type,
            m.assets_type,
            m.assets_id,
            m.assets_name,
            m.this_amount,
            m.price,
            m.creator_dep_id,
            m.balance,
            m.notes,
            m.creator_id,
            m.creator,
            m.market_id,
            m.market_code,
            m.mch_id,
            m.mch_name,
            m.first_district_id,
            m.first_district_name,
            m.second_district_id,
            m.second_district_name,
            m.version,
            cm.certificate_number as certificateNumber
        from
            meter as m
          left join customer_meter as cm on m.id = cm.meter_id
        where
          m.id = #{id}
    </select>
</mapper>