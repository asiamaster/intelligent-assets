<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.ia.mapper.CustomerMeterMapper">
  <resultMap id="BaseResultMap" type="com.dili.ia.domain.CustomerMeter">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="meter_id" jdbcType="BIGINT" property="meterId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_cellphone" jdbcType="VARCHAR" property="customerCellphone" />
    <result column="creator_dep_id" jdbcType="BIGINT" property="creatorDepId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="market_id" jdbcType="BIGINT" property="marketId" />
    <result column="market_code" jdbcType="VARCHAR" property="marketCode" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
<!--    <result column="version" jdbcType="INTEGER" property="version" />-->
<!--    <result column="version" jdbcType="INTEGER" property="version" />-->
<!--    <result column="version" jdbcType="INTEGER" property="version" />-->
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, create_time, modify_time, meter_id, customer_id, customer_name, customer_cellphone,certificate_number,
    creator_dep_id, state, notes, creator_id, creator, market_id, market_code, version
  </sql>
  <select id="selectBy" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from customer_meter
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="updateBy" parameterType="com.dili.ia.domain.CustomerMeter">
    <!--
      WARNING - @mbg.generated
    -->
    update customer_meter
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meterId != null">
        meter_id = #{meterId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerCellphone != null">
        customer_cellphone = #{customerCellphone,jdbcType=VARCHAR},
      </if>
      <if test="creatorDepId != null">
        creator_dep_id = #{creatorDepId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null">
        market_id = #{marketId,jdbcType=BIGINT},
      </if>
      <if test="marketCode != null">
        market_code = #{marketCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="getMeterById" parameterType="java.lang.Long" resultType="com.dili.ia.domain.dto.CustomerMeterDto">
      select
          cm.id as id,
          cm.create_time as create_time,
          cm.modify_time as modify_time,
          cm.meter_id as meter_id,
          cm.customer_id as customer_id,
          cm.customer_name as customer_name,
          cm.customer_cellphone as customer_cellphone,
          cm.certificate_number as certificate_number,
          cm.creator_dep_id as creator_dep_id,
          cm.state as state,
          cm.notes as notes,
          cm.creator_id as creator_id,
          cm.creator as creator,
          cm.market_id as market_id,
          cm.market_code as market_code,
          cm.version as version,
          me.number as number,
          me.type as type,
          me.assets_name as assetsName
      from
        customer_meter as cm
        left join meter as me on cm.meter_id = me.id
      where
        cm.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="listCustomerMeters" parameterType="com.dili.ia.domain.dto.CustomerMeterDto" resultType="com.dili.ia.domain.dto.CustomerMeterDto">
    select
        cm.id as id,
        cm.create_time as create_time,
        cm.modify_time as modify_time,
        cm.meter_id as meter_id,
        cm.customer_id as customer_id,
        cm.customer_name as customer_name,
        cm.customer_cellphone as customer_cellphone,
        cm.certificate_number as certificate_number,
        cm.creator_dep_id as creator_dep_id,
        cm.state as state,
        cm.notes as notes,
        cm.creator_id as creator_id,
        cm.creator as creator,
        cm.market_id as market_id,
        cm.market_code as market_code,
        cm.version as version,
        me.number as number,
        me.type as type,
        me.assets_name as assetsName
    from
        customer_meter as cm
        left join meter as me on cm.meter_id = me.id
    <where>
        <if test="state != null">
            and cm.state = #{state,jdbcType=INTEGER}
        </if>
        <if test="type != null">
            and me.type = #{type,jdbcType=INTEGER}
        </if>
        <if test="departmentId != null">
            and me.department_id = #{departmentId,jdbcType=INTEGER}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
                me.number =  #{keyword}
                or me.assets_name like concat('', #{keyword}, '%')
                or cm.customer_name like concat('', #{keyword}, '%')
          )
        </if>
    </where>
    </select>

    <select id="getBindInfoByMeterId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
            id,
            customer_id,
            customer_cellphone,
            meter_id,
            notes,
            creator_dep_id,
            customer_name
        FROM
            customer_meter
        WHERE
            meter_id = #{meterId}
            and state = 1
    </select>

    <select id="listCustomerMetersByLikeName" parameterType="com.dili.ia.domain.dto.CustomerMeterDto" resultType="com.dili.ia.domain.dto.CustomerMeterDto">
        SELECT
            me.id as meterId ,
            me.number as number ,
            me.assets_id as assetsId ,
            me.assets_type as assetsType ,
            me.assets_name as assetsName ,
            me.price as price ,
            cm.customer_id as customerId ,
            cm.customer_name as customerName ,
            cm.customer_cellphone as customerCellphone ,
            cm.certificate_number as certificateNumber
        FROM
            meter as me
        left join customer_meter as cm on cm.meter_id = me.id
        <where>
            <if test="type != null">
                and me.type = #{type,jdbcType=INTEGER}
            </if>
            <if test="keyword != null">
                and me.number like concat('', #{keyword}, '%')
            </if>
        </where>
    </select>
</mapper>